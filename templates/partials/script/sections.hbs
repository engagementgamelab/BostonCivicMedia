{{!< default}}
{{!-- 
/**
 * Boston Civic Media Website
 * Developed by Engagement Lab, 2016
 * ==============
 * 
 * Script includes partial for individual sections
 * ==========
 */
--}}

<script type="text/javascript">
	$(document).ready(function() {
		// alert('{{section}}');
		/*
		 Analytics start
		 ==============
		*/
		(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
		(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
		m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
		})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

		ga('create', 'UA-64617433-3', 'auto');
		ga('send', 'pageview');
		/*
		 =============
		 Analytics end
		*/
		
		// $(document).ready(function(){
		  
		// });
		// {{removePara}}
		$('#markdown-span p').contents().unwrap();

		{{!-- INDEX Template Script --}}
		{{#ifeq section 'home'}}
			$('.bxslider').bxSlider({
			  nextSelector: '#slider-next',
			  prevSelector: '#slider-prev',
			  autoheight: true,
			  infiniteLoop: true,
			  pager: false,
			  // controls: true,
			  nextText: '<img src="/images/rightarrow.png" height="50%" width="20%" style="margin:0 auto;">',
			  prevText: '<img src="/images/leftarrow.png" height="50%" width="20%" style="margin:0 auto;">'
			  // controls: true

		  })
	  	

		{{/ifeq}}

		{{!-- ABOUT Template Script --}}
		{{#ifeq section 'about'}}
		var container = $('#affiliate-content');

		lastImageLoaded (container, function () {
			var container = $('#affiliate-content');
				container.isotope({
			    itemSelector: '.affiliate-item', 
			    layoutMode: 'fitRows'
			  });
			// $('.isotopeContent').isotope('reloadItems').isotope();

		});
		$('.filters-button-group').on( 'click', 'button', function() {
			  var filterValue = $( this ).attr('data-filter');
			  // use filterFn if matches value
			  // filterValue = filterFns[ filterValue ] || filterValue;
			  container.isotope({ filter: filterValue });
			});
			// change is-checked class on buttons
			$('.button-group').each( function( i, buttonGroup ) {
			  var $buttonGroup = $( buttonGroup );
			  $buttonGroup.on( 'click', 'button', function() {
			    $buttonGroup.find('.is-checked').removeClass('is-checked');
			    $( this ).addClass('is-checked');
			  });
			});

			var gliderDom = $("#partners_glider");
			var gliderApi;

			imageLoaded(gliderDom, function() {
			
				// Initialize partners carousel
				var gliderObj = gliderDom.glide({

		        type: "carousel",
		        autoplay: false,
		        autoheight: true,
		        afterTransition: function(evt) {
		        	// Select corresponding partner
							selectPartner($('.client-image').eq(evt.index-1));
						}
		    
		    });
		    gliderApi = gliderObj.data('glide_api');

				$('.client-image').click(function() {
					// go to slide for index
					var ind = $(this).index()+1;
					gliderApi.go('=' + ind);
					selectPartner($(this));
				});

			});

			function selectPartner(selector) {
				$('.clients>.client-image.selected').removeClass('selected');
				selector.addClass('selected');
			}

		{{/ifeq}}

		{{!-- BIO Template Script --}}
		{{#ifeq section 'person'}}

			var gliderDom = $("#people_glider");
	    var gliderApi;

			imageLoaded(gliderDom, function() {

				// Initialize people carousel
				var gliderObj = gliderDom.glide({
		        type: "carousel",
		        autoplay: false,
		        autoheight: false,
		        startAt: $(gliderDom).data('starting-index')+1,
		        afterInit: function(evt) {
		        	// The people list is invisible by default, show it, but only after a delay to allow page to load
		        	setTimeout(function() {
			        	$(evt.current[0]).fadeTo(500, 1);
		        	} , 500);
		        },
		        beforeTransition: function(evt) {
		        	$(evt.current[0]).fadeTo(100, 0);
		        },
		        afterTransition: function(evt) {
		         	// Show corresponding category
		        	updateCategory();

		        	// Update URL with the person's key
							var personKey = $(".glide__slide.active .person-bio-left").data('key');
							window.history.pushState(null, null, personKey);

		        	$(evt.current[0]).fadeTo(100, 1);
						}
		    });
		    gliderApi = gliderObj.data('glide_api');

		    // Updated people category header
		    function updateCategory() {
		    	
		    	var person = $(".glide__slide.active .person-bio-left");
					var cat = person.data('category');
					
					$('#person_category').text(cat);

		    }

		    updateCategory();

			});


		{{/ifeq}}


		{{!-- SYLLABI Template Script --}}
		{{#ifeq section 'syllabi'}}

			// store filter for each group
			var filters = {};

			$('.dropdown-menu li').delegate('a','click', function() {
				
				$('.is-checked').removeClass('is-checked');
				$(this).addClass('is-checked');

				applyFilter(this);
				checkFiltered ();
			});

			var syllabiContainer = $('#syllabi-content');
			syllabiContainer.isotope({
			    itemSelector: '.syllabi-item',
			    isFitHeight: true,
			    layoutMode: 'masonry'
			});
			$('.isotopeContent').isotope('reloadItems').isotope();


		function checkFiltered () {
			
			var syllabiContainer = $('#syllabi-content');
			if ( syllabiContainer.data('isotope').filteredItems.length === 0 )
			  $('.no-syllabi-visible').show();
			else
				$('.no-syllabi-visible').hide();

		}
	    
	    function applyFilter(elem) {
				
		    var selector = $(elem);
		    
		    // store filter value in object
		    var group = selector.attr('data-filter-group');
		    filters[group] = selector.attr('data-filter-value');
		    
		    // convert object into array
		    var isoFilters = [];
		    for ( var prop in filters ) {
		      isoFilters.push( filters[ prop ] )
		    }
		    			    
		    var filterStr = isoFilters.join('');
		    syllabiContainer.isotope({ filter: filterStr });

		  }
		  console.log ("im a syllabi");
		{{/ifeq}}

		{{!-- LIGHTNING TALK Template Script --}}
		{{#ifeq section 'lightning_talk'}}

		function checkFiltered () {
			
			var talks = $('#talks-content');
			if ( talks.data('isotope').filteredItems.length === 0 )
			  $('.no-talks-visible').show();
			else
				$('.no-talks-visible').hide();

		}

			var container = $('#talks-content');
				container.isotope({
			    itemSelector: '.talks-item', 
			    isFitHeight: true,
			    layoutMode: 'masonry'
			  });
				// $('.isotopeContent').isotope('reloadItems').isotope();

			$('.filters-button-group').on( 'click', 'button', function() {
			  
			  var filterValue = $( this ).attr('data-filter');
			  container.isotope({ filter: filterValue });

			});
			// change is-checked class on buttons
			$('.button-group').each( function( i, buttonGroup ) {
			  var $buttonGroup = $( buttonGroup );

			  $buttonGroup.on( 'click', 'button', function() {
			    $buttonGroup.find('.is-checked').removeClass('is-checked');
			    $( this ).addClass('is-checked');

			    checkFiltered();
			  });

			});

		{{/ifeq}}
	})
</script>